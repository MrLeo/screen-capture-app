# https://docs.github.com/cn/actions/reference/workflow-syntax-for-github-actions
# https://zhuanlan.zhihu.com/p/164901026
name: release-build

on:
  push:
    tags:
      - v*.*.*
  pull_request:
      branches:
        - master

jobs:
  release:
    name: build and release electron app
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v2

      # step2: install node env
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      # step3: npm install
      - name: npm install
        run: |
          npm install

      # step4: build app for mac/win
      - name: build windows app
        if: matrix.os == 'windows-latest'
        run: |
          npm run electron:build-win
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: build mac app
        if: matrix.os == 'macos-latest'
        run: |
          npm run electron:build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # step5: cleanup artifacts in dist_electron
      # - name: cleanup artifacts
      #   run: |
      #     npx rimraf "dist_electron/!(*.exe|*.dmg)"
      - name: cleanup artifacts for windows
        if: matrix.os == 'windows-latest'
        run: |
          npx rimraf "dist_electron/!(*.exe)"

      - name: cleanup artifacts for macos
        if: matrix.os == 'macos-latest'
        run: |
          npx rimraf "dist_electron/!(*.dmg)"

      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}
          path: dist_electron
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "dist_electron/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
